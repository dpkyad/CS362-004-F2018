Result for running unit tests:
unittest1.c:
----------------- Testing Function: getCost() ----------------
TEST 1: Cards value equal function return value
PASS: expected 0, got  0
PASS: expected 2, got  2
PASS: expected 5, got  5
PASS: expected 8, got  8
PASS: expected 0, got  0
PASS: expected 3, got  3
PASS: expected 6, got  6
PASS: expected 6, got  6
PASS: expected 5, got  5
PASS: expected 4, got  4
PASS: expected 4, got  4
PASS: expected 5, got  5
PASS: expected 4, got  4
PASS: expected 4, got  4
PASS: expected 3, got  3
PASS: expected 4, got  4
PASS: expected 3, got  3
PASS: expected 5, got  5
PASS: expected 3, got  3
PASS: expected 5, got  5
PASS: expected 3, got  3
PASS: expected 4, got  4
PASS: expected 2, got  2
PASS: expected 5, got  5
PASS: expected 4, got  4
PASS: expected 4, got  4
PASS: expected 4, got  4

TEST 2: Unknown card returns -1
PASS: expected -1, got  -1

 >>>>> SUCCESS: Testing complete getCost() <<<<<

File 'dominion.c'
Lines executed:21.33% of 558
Creating 'dominion.c.gcov'

unittest2.c:
----------------- Testing Function: gainCard() ----------------
TEST 1: SupplyCount call is -1 when supply is 0 for all players.
PASS: supplyCount expected -1, got  -1

TEST 2: Cards are gained for player 1 in discard and supplyCount decreases by 1
PASS: discard expected 7, got  7
      supplyCount expected 9, got  9
PASS: discard expected 10, got  10
      supplyCount expected 7, got  7
PASS: discard expected 22, got  22
      supplyCount expected 9, got  9
PASS: discard expected 14, got  14
      supplyCount expected 9, got  9
PASS: discard expected 17, got  17
      supplyCount expected 9, got  9
PASS: discard expected 11, got  11
      supplyCount expected 9, got  9
PASS: discard expected 21, got  21
      supplyCount expected 9, got  9
PASS: discard expected 25, got  25
      supplyCount expected 9, got  9
PASS: discard expected 19, got  19
      supplyCount expected 9, got  9
PASS: discard expected 13, got  13
      supplyCount expected 9, got  9

TEST 3: Cards are gained for player 1 deck and supplyCount decreases by 1
PASS: deck expected 7, got  7
      supplyCount expected 8, got  8
PASS: deck expected 10, got  10
      supplyCount expected 6, got  6
PASS: deck expected 22, got  22
      supplyCount expected 8, got  8
PASS: deck expected 14, got  14
      supplyCount expected 8, got  8
PASS: deck expected 17, got  17
      supplyCount expected 8, got  8
PASS: deck expected 11, got  11
      supplyCount expected 8, got  8
PASS: deck expected 21, got  21
      supplyCount expected 8, got  8
PASS: deck expected 25, got  25
      supplyCount expected 8, got  8
PASS: deck expected 19, got  19
      supplyCount expected 8, got  8
PASS: deck expected 13, got  13
      supplyCount expected 8, got  8

TEST 4: Cards are gained in hand for player 1 and supplyCount decreases by 1
PASS: hand expected 7, got  7
      supplyCount expected 7, got  7
PASS: hand expected 10, got  10
      supplyCount expected 5, got  5
PASS: hand expected 22, got  22
      supplyCount expected 7, got  7
PASS: hand expected 14, got  14
      supplyCount expected 7, got  7
PASS: hand expected 17, got  17
      supplyCount expected 7, got  7
PASS: hand expected 11, got  11
      supplyCount expected 7, got  7
PASS: hand expected 21, got  21
      supplyCount expected 7, got  7
PASS: hand expected 25, got  25
      supplyCount expected 7, got  7
PASS: hand expected 19, got  19
      supplyCount expected 7, got  7
PASS: hand expected 13, got  13
      supplyCount expected 7, got  7

 >>>>> SUCCESS: Testing complete gainCard() <<<<<

File 'dominion.c'
Lines executed:24.01% of 558
Creating 'dominion.c.gcov'

unittest3.c:
----------------- Testing Function: fullDeckCount() ----------------
TEST 1: Counts for deck, hand, and discard are 1 since there are no repeats in the set 1
PASS: deck set 1 expected 1, got  1
PASS: deck set 1 expected 1, got  1
PASS: deck set 1 expected 1, got  1
PASS: deck set 1 expected 1, got  1
PASS: deck set 1 expected 1, got  1
PASS: hand set 1 expected 1, got  1
PASS: hand set 1 expected 1, got  1
PASS: hand set 1 expected 1, got  1
PASS: hand set 1 expected 1, got  1
PASS: hand set 1 expected 1, got  1
PASS: discard set 1 expected 1, got  1
PASS: discard set 1 expected 1, got  1
PASS: discard set 1 expected 1, got  1
PASS: discard set 1 expected 1, got  1
PASS: discard set 1 expected 1, got  1

TEST 2: Counts for deck, hand, and discard are incremental since there are repeats in the set 2
PASS: deck set 2 expected 1, got  1
PASS: deck set 2 expected 2, got  2
PASS: deck set 2 expected 3, got  3
PASS: deck set 2 expected 4, got  4
PASS: deck set 2 expected 5, got  5
PASS: hand set 2 expected 1, got  1
PASS: hand set 2 expected 2, got  2
PASS: hand set 2 expected 3, got  3
PASS: hand set 2 expected 4, got  4
PASS: hand set 2 expected 5, got  5
PASS: discard set 2 expected 1, got  1
PASS: discard set 2 expected 2, got  2
PASS: discard set 2 expected 3, got  3
PASS: discard set 2 expected 4, got  4
PASS: discard set 2 expected 5, got  5

TEST 3: Counts for deck, hand, and discard are as defined since there are a mix of cards in the set 3
PASS: deck set 3 expected 1, got  1
PASS: deck set 3 expected 1, got  1
PASS: deck set 3 expected 2, got  2
PASS: deck set 3 expected 2, got  2
PASS: deck set 3 expected 1, got  1
PASS: hand set 3 expected 1, got  1
PASS: hand set 3 expected 1, got  1
PASS: hand set 3 expected 2, got  2
PASS: hand set 3 expected 2, got  2
PASS: hand set 3 expected 1, got  1
PASS: discard set 3 expected 1, got  1
PASS: discard set 3 expected 1, got  1
PASS: discard set 3 expected 2, got  2
PASS: discard set 3 expected 2, got  2
PASS: discard set 3 expected 1, got  1

TEST 4: Unknown cards
FAIL: deck set 4 expected 0, got  1
FAIL: deck set 4 expected 0, got  2
FAIL: deck set 4 expected 0, got  3
FAIL: deck set 4 expected 0, got  4
FAIL: deck set 4 expected 0, got  5
FAIL: hand set 4 expected 0, got  1
FAIL: hand set 4 expected 0, got  2
FAIL: hand set 4 expected 0, got  3
FAIL: hand set 4 expected 0, got  4
FAIL: hand set 4 expected 0, got  5
FAIL: discard set 4 expected 0, got  1
FAIL: discard set 4 expected 0, got  2
FAIL: discard set 4 expected 0, got  3
FAIL: discard set 4 expected 0, got  4
FAIL: discard set 4 expected 0, got  5


 >>>>> FAILURE: Testing complete fullDeckCount() <<<<<

File 'dominion.c'
Lines executed:25.63% of 558
Creating 'dominion.c.gcov'

unittest4.c:
----------------- Testing Function: whoseTurn() ----------------
TEST 1: Correct number of players are returned
PASS: expected 0, got  0
PASS: expected 1, got  1
PASS: expected 2, got  2
PASS: expected 3, got  3

 >>>>> SUCCESS: Testing complete whoseTurn() <<<<<

File 'dominion.c'
Lines executed:27.06% of 558
Creating 'dominion.c.gcov'

Result for running card tests:
cardtest1.c:
----------------- Testing Card: adventurer ----------------

TEST 1: Find 1 treasure cards for player 1 only
PASS: treasure expected 1, got  1
      handCount expected 6, got  6

TEST 2: Find 2 treasure cards
PASS: treasure expected 2, got  2
      handCount expected 7, got  7

TEST 3: Find no more than 2 treasure cards for player 1 only
PASS: treasure expected 2, got  2
      handCount expected 7, got  7

TEST 4: Find 0 treasure cards for player 1 only
FAIL: treasure expected 0, got  0
      handCount expected 5, got  -1

 >>>>> FAILURE: Testing complete adventurer <<<<<

File 'dominion.c'
Lines executed:31.54% of 558
Creating 'dominion.c.gcov'

cardtest2.c:
----------------- Testing Card: smithy ----------------

TEST 1: Draw 3 cards
FAIL: cards expected 3, got  2
      handCount expected 7, got  6

 >>>>> FAILURE: Testing complete smithy <<<<<

File 'dominion.c'
Lines executed:34.41% of 558
Creating 'dominion.c.gcov'

cardtest3.c:
----------------- Testing Card: village ----------------

TEST 1: Draw 1 card + 2 actions
PASS: cards expected 1, got  1
      actions expected 3, got  3
      handCount expected 5, got  5

 >>>>> SUCCESS: Testing complete village <<<<<

File 'dominion.c'
Lines executed:35.30% of 558
Creating 'dominion.c.gcov'

cardtest4.c:
----------------- Testing Card: great_hall ----------------

TEST 1: Draw 1 card + 1 actions
PASS: cards expected 1, got  1
      actions expected 3, got  2
      handCount expected 5, got  5

 >>>>> SUCCESS: Testing complete great_hall <<<<<

File 'dominion.c'
Lines executed:37.46% of 558
Creating 'dominion.c.gcov'

